import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { gql, useQuery } from "@apollo/client"
import { format } from 'date-fns'
import ptBR from 'date-fns/locale/pt-BR'

import { CardPost } from '@/components/cardPost'
import { Header } from '@/components/Header'
import { Loading } from '@/components/loading'
import { Empty } from '@/components/Empty'
import { GetServerSideProps } from 'next'
import { client } from '@/lab/apollo'

const GET_ALL_POST = gql`
query GetsAllPosts {
  posts(orderBy: createdAt_DESC) {
    id
    slug
    subtitle
    title
    createdAt
    coverimage {
      url
    }
    author {
      name
    }
  }
}
`;
interface AllPosts {
  posts: {
    id: string;
    slug: string;
    subtitle: string;
    title: string;
    createdAt: string;
    coverimage: {
      url: string;
    }
    author: {
      name: string;
    }
  }[]
}

export default function Home({ posts }: AllPosts) {




  // const { loading, data, error } = useQuery<AllPosts>(GET_ALL_POST)

  // if (loading) return <Loading />

  return (
    <>
      <Head>
        <title>Jefferson Developer - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <div className="w-full max-w-[1120px] flex flex-col mx-auto pb-12 px-4">
        <Header />

        {posts ?
          <>
            <Link 
            href={`/post/${posts[0].slug}`} className='w-full h-full flex gap-4 lg:gap-8 flex-col sm:flex-row items-center justify-center mt-12  hover:brightness-75 transition-all'>
              <div className='flex flex-1 w-full h-full min-h-[240px] md:h-[334px] relative rounded-2xl overflow-hidden'>
                <Image
                  src={posts[0].coverimage.url}
                  alt=""
                  fill={true}
                  style={{ objectFit: "cover" }}
                />
              </div>
              <div className='flex flex-1 h-full flex-col gap-3 lg:gap-6'>
                <h1 className='font-bold text-3xl md:text-[40px] text-blue-600'>{posts[0].title}</h1>
                <p className='text-zinc-600 text-sm md:text-base text-justify lg:text-left'>{posts[0].subtitle}</p>

                <div>
                  <p className='font-bold text-zinc-900 text-sm md:text-base'>{posts[0].author.name}</p>
                  <p className='text-zinc-600 text-xs md:text-sm'>{format(new Date(posts[0].createdAt), "dd 'de' MMM 'de' yyyy", { locale: ptBR})}</p>
                </div>
              </div>
            </Link>
            <div className='flex flex-col items-center sm:grid grid-cols-2 md:grid-cols-3 gap-4 lg:gap-8 mt-12'>
              {posts.map((post, index) => {
                if (index !== 0) {
                  return (
                    <CardPost
                      key={post.id}
                      title={post.title}
                      author={post.author.name}
                      createdAt={post.createdAt}
                      subtitle={post.subtitle}
                      urlImage={post.coverimage.url}
                      slug={post.slug}
                    />
                  )
                }
              })}
            </div>
          </>
          :
          <Empty />
        }
      </div>

    </>
  )
}


export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const {data} = await client.query({query: GET_ALL_POST})
  return {
    props: {
      posts: data.posts,
    }
  }
}